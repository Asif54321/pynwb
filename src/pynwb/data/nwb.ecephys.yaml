groups:
- neurodata_type_def: ElectricalSeries
  neurodata_type_inc: TimeSeries
  doc: A time series of acquired voltage data from extracellular recordings.
    The data field is an int or float array storing data in volts. The first
    dimension should always represent time. The second dimension, if present,
    should represent channels.
  datasets:
  - name: data
    dtype: numeric
    dims:
    - - num_times
    - - num_times
      - num_channels
    shape:
    - - null
    - - null
      - null
    doc: Recorded voltage data
    attributes:
    - name: unit
      dtype: text
      default_value: volt
      doc: Base unit of measurement for working with the data. The default
        value is 'volt'. If the data are stored
        in non-standard units, the attribute ''conversion'' describes how to convert the
        data to the specified SI unit. e.g. if the data are stored as int32 values,
        where a difference of 1 corresponds to a difference of 4.5 * 10^-6 V, then store the
        original int32 values here, set ''conversion'' to 4.5 * 10^-6, and to access the
        data in volts, multiply ''data'' by ''conversion''.
      required: false
  - name: electrodes
    neurodata_type_inc: DynamicTableRegion  # composition
    doc: A table region pointer to the electrodes that this time series was generated from

- neurodata_type_def: SpikeEventSeries
  neurodata_type_inc: TimeSeries
  doc: Stores snapshots/snippets of recorded spike events (i.e., threshold crossings). This
    may also be raw data, as reported by ephys hardware. If so, the TimeSeries::description
    field should describing how events were detected. All SpikeEventSeries should
    reside in a module (under EventWaveform interface) even if the spikes were reported
    and stored by hardware. All events span the same recording channels and store
    snapshots of equal duration. TimeSeries::data array structure: [num events]
    [num channels] [num samples] (or [num events] [num samples] for single electrode).
  datasets:
  - name: data
    dtype: numeric
    dims:
    - - num_events
      - num_samples
    - - num_events
      - num_channels
      - num_samples
    shape:
    - - null
      - null
    - - null
      - null
      - null
    doc: Spike waveforms
  # Unlike for TimeSeries, timestamps are required for SpikeEventSeries and are thus re-specified here
  - name: timestamps
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Timestamps for samples stored in data, in seconds, relative to the
      common experiment master-clock stored in NWBFile.timestamps_reference_time.
      Timestamps are required for the events.
    attributes:
    - name: unit
      dtype: text
      value: second
      doc: Unit of measurement for timestamps, which is fixed to 'second'

- neurodata_type_def: FeatureExtraction
  neurodata_type_inc: NWBDataInterface
  default_name: FeatureExtraction
  doc: Features, such as PC1 and PC2, that are extracted from signals stored in a
    SpikeEvent TimeSeries or other source.
  datasets:
  - name: description
    dtype: text
    dims:
    - num_features
    shape:
    - null
    doc: Description of features (eg, ''PC1'') for each of the extracted features.
  - name: features
    dtype: float32
    dims:
    - num_events
    - num_channels
    - num_features
    shape:
    - null
    - null
    - null
    doc: Multi-dimensional array of features extracted from each event.
  - name: times
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Times of events that features correspond to (can be a link).
  - name: electrodes
    neurodata_type_inc: DynamicTableRegion  # composition
    doc: The electrodes that this series was generated from

- neurodata_type_def: EventDetection
  neurodata_type_inc: NWBDataInterface
  default_name: EventDetection
  doc: Detected spike events from voltage trace(s)
  datasets:
  - name: detection_method
    dtype: text
    doc: A description of how events were detected, such as voltage threshold, or dV/dT
      threshold, as well as relevant values.
  - name: source_idx
    dtype: int32
    dims:
    - num_events
    shape:
    - null
    doc: Indices (zero-based) into source ElectricalSeries::data array corresponding
      to time of event. Module description should define what is meant by time of
      event (e.g., .25msec before action potential peak, zero-crossing time, etc).
      The index points to each event from the raw data
  - name: times
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Timestamps of events, in seconds
    attributes:
    - name: unit
      dtype: text
      default_value: second
      doc: Unit of measurement for event times, which is fixed to 'second'
      required: false
  links:
  - name: source_electricalseries
    target_type: ElectricalSeries
    doc: Link to the ElectricalSeries that this data was calculated from. Metadata
      about electrodes and their position can be read from that ElectricalSeries so
      it's not necessary to include that information here

- neurodata_type_def: EventWaveform
  neurodata_type_inc: NWBDataInterface
  default_name: EventWaveform
  doc: Represents either the waveforms of detected events, as extracted from a raw
    data trace in /acquisition, or the event waveforms that were stored during experiment
    acquisition.
  groups:
  - neurodata_type_inc: SpikeEventSeries
    doc: SpikeEventSeries object containing detected spike event waveforms
    quantity: '*'

- neurodata_type_def: FilteredEphys
  neurodata_type_inc: NWBDataInterface
  default_name: FilteredEphys
  doc: Ephys data from one or more channels that has been subjected to filtering.
    Examples of filtered data include Theta and Gamma (LFP has its own interface).
    FilteredEphys modules publish an ElectricalSeries for each filtered channel or
    set of channels. The name of each ElectricalSeries is arbitrary but should be
    informative. The source of the filtered data, whether this is from analysis of
    another time series or as acquired by hardware, should be noted in each's TimeSeries::description
    field. There is no assumed 1::1 correspondence between filtered ephys signals
    and electrodes, as a single signal can apply to many nearby electrodes, and one
    electrode may have different filtered (e.g., theta and/or gamma) signals represented.
  groups:
  - neurodata_type_inc: ElectricalSeries
    doc: ElectricalSeries object containing filtered electrophysiology data
    quantity: '+'

- neurodata_type_def: LFP
  neurodata_type_inc: NWBDataInterface
  default_name: LFP
  doc: LFP data from one or more channels. The electrode map in each linked ElectricalSeries
    will identify which channels are providing LFP data. Filter properties should
    be noted in the ElectricalSeries description or comments field.
  groups:
  - neurodata_type_inc: ElectricalSeries
    doc: ElectricalSeries object containing LFP data for one or more channels
    quantity: '+'

- neurodata_type_def: ElectrodeGroup
  neurodata_type_inc: NWBContainer
  doc: A physical grouping of electrodes
  attributes:
  - name: description
    dtype: text
    doc: Description of this electrode group
  - name: location
    dtype: text
    doc: Location of this electrode group
  links:
  - name: device
    target_type: Device
    doc: Link to the device that was used to record from this electrode group
    quantity: '?'


# The types below have been deprecated
- neurodata_type_def: ClusterWaveforms
  neurodata_type_inc: NWBDataInterface
  doc: 'DEPRECATED The mean waveform shape, including standard deviation, of the
    different clusters. Ideally, the waveform analysis should be performed on data that
    is only high-pass filtered. This is a separate module because it is expected to require
    updating. For example, IMEC probes may require different storage requirements to
    store/display mean waveforms, requiring a new interface or an extension of this one.'
  attributes:
    - name: help
  dtype: text
  doc: Value is 'Mean waveform shape of clusters. Waveforms should be high-pass
    filtered (ie, not the same bandpass filter used waveform analysis and clustering)'
  value: DEPRECATED Mean waveform shape of clusters. Waveforms should be high-pass
    filtered (ie, not the same bandpass filter used waveform analysis and clustering)
  datasets:
  - name: waveform_filtering
    dtype: text
    doc: Filtering applied to data before generating mean/sd
  - name: waveform_mean
    dtype: float32
    doc: The mean waveform for each cluster, using the same indices for each wave
      as cluster numbers in the associated Clustering module (i.e, cluster 3 is in
      array slot [3]). Waveforms corresponding to gaps in cluster sequence should
      be empty (e.g., zero- filled)
    dims:
    - num_clusters
    - num_samples
    shape:
    - null
    - null
  - name: waveform_sd
    dtype: float32
    doc: Stdev of waveforms for each cluster, using the same indices as in mean
    dims:
    - num_clusters
    - num_samples
    shape:
    - null
    - null
  links:
  - name: clustering_interface
    doc: HDF5 link to Clustering interface that was the source of the clustered data
    target_type: Clustering
    default_name: ClusterWaveforms

- neurodata_type_def: Clustering
  neurodata_type_inc: NWBDataInterface
  doc: DEPRECATED Clustered spike data, whether from automatic clustering tools (e.g.,
    klustakwik) or as a result of manual sorting.
  attributes:
  - name: help
  dtype: text
  doc: Value is 'Clustered spike data, whether from automatic clustering tools (eg,
    klustakwik) or as a result of manual sorting'
  value: DEPRECATED Clustered spike data, whether from automatic clustering tools
    (eg, klustakwik) or as a result of manual sorting
  datasets:
  - name: description
  dtype: text
  doc: Description of clusters or clustering, (e.g. cluster 0 is noise, clusters
    curated using Klusters, etc)
  - name: num
  dtype: int32
  doc: Cluster number of each event
  dims:
  - num_events
  shape:
  - null
  - name: peak_over_rms
  dtype: float32
  doc: Maximum ratio of waveform peak to RMS on any channel in the cluster (provides
    a basic clustering metric).
  dims:
  - num_clusters
  shape:
  - null
  - name: times
  dtype: float64
  doc: Times of clustered events, in seconds. This may be a link to times field
    in associated FeatureExtraction module.
  dims:
  - num_events
  shape:
  - null
  default_name: Clustering
